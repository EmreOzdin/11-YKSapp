# 🎯 YKS Mobil Uygulama Kuralları ve Yapılandırma

## 📚 Proje Amacı

YKS (TYT, AYT, YDT) sınavına hazırlanan öğrenciler için; konu anlatımı, soru çözümü, deneme sınavı ve net hesaplama gibi özellikler sunan, modern ve kullanıcı dostu bir mobil uygulama geliştirmek.

---

## 🏗️ Klasör Yapısı (MVM)

```text
src/
├── models/         # Veri modelleri (Kullanıcı, Soru, Konu vb.)
├── viewmodels/     # State ve iş mantığı (örn. SoruViewModel)
├── views/          # Ekranlar ve UI bileşenleri
├── assets/         # Statik dosyalar (görseller, ikonlar)
├── services/       # API, Firebase, local storage işlemleri
├── navigation/     # Sayfa yönlendirme
├── utils/          # Yardımcı fonksiyonlar
└── context/        # Global state yönetimi
```

---

## 🧑‍💻 Kod Standartları

| Kategori         | Kural                                                                 |
|------------------|-----------------------------------------------------------------------|
| **Dil**          | TypeScript (strict mode)                                              |
| **Component**    | Functional, hooks tabanlı, React.memo ile performans                  |
| **Tipler**       | Interface/type ayrı dosya, union types, generic kullanımı             |
| **Stil**         | StyleSheet.create, responsive, theme, Platform.select                 |
| **State**        | Context API, useState, useReducer, custom hooks                       |
| **Test**         | Jest + React Native Testing Library                                   |
| **Import**       | 1. React, 2. 3rd party, 3. Local, 4. Utils, 5. Types                  |

---

## 🧩 MVM (Model-View-ViewModel) Prensipleri

- **Model:** Veri yapıları, API modelleri, tipler
- **ViewModel:** State yönetimi, iş mantığı, veri işleme
- **View:** UI, kullanıcı etkileşimi, görsel sunum

> **Not:** ViewModel, View ile Model arasında köprü görevi görür. UI'da minimum iş mantığı olmalı.

---

## 🎨 Tasarım & UX

- Modern, sade ve odaklı arayüz
- Renkli ikonlar ve illüstrasyonlar
- Responsive tasarım (her cihazda uyumlu)
- Erişilebilirlik: Yüksek kontrast, büyük font, screen reader desteği
- FlatList için key prop, touch target min. 44px

---

## 🔒 Güvenlik & Performans

- API key'leri .env dosyasında sakla
- AsyncStorage ile offline destek
- Lazy loading, image optimization
- Try-catch, user-friendly error mesajları

---

## 🧪 Test & Dokümantasyon

- Her model, viewmodel ve view için birim testi
- README ve component dokümantasyonu güncel tutulmalı
- Test coverage > %80 hedeflenmeli

---

## 🚀 Başlangıç Komutları

```bash
# Expo projesi başlat
npx create-expo-app YKSapp --template

# Gerekli paketleri yükle
cd YKSapp
npm install
```

---

> **Hazır mısın? Kodlamaya başlamadan önce bu kuralları gözden geçir! 💡**
